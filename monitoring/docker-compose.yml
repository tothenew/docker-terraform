version: '3.7'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped
  prometheus:
    image: "prom/prometheus"
    container_name: "prometheus"
    user: "0"
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/data:/prometheus"
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - elk

  influxdb:
    image: "influxdb"
    container_name: "influxdb"
    ports:
      - "8086:8086"
    volumes:
      - "./influxdb:/var/lib/influxdb"
    networks:
      - elk

  chronograf:
    image: chronograf:latest
    ports:
      - '8888:8888'
    volumes:
      - ./chronograf:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
    networks:
      - elk

  grafana:
    image: "grafana/grafana"
    container_name: "grafana"
    depends_on:
      - chronograf
      - prometheus
    user: "0"
    ports:
      - "3000:3000"
    volumes:
      - "./grafana:/var/lib/grafana"
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
